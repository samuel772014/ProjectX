// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MVC_Project.Models;

public partial class ProjectXContext : DbContext
{
    public ProjectXContext(DbContextOptions<ProjectXContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Chat> Chat { get; set; }

    public virtual DbSet<Contact> Contact { get; set; }

    public virtual DbSet<Group> Group { get; set; }

    public virtual DbSet<LikeRecord> LikeRecord { get; set; }

    public virtual DbSet<Member> Member { get; set; }

    public virtual DbSet<MyActivity> MyActivity { get; set; }

    public virtual DbSet<Notification> Notification { get; set; }

    public virtual DbSet<OfficialPhoto> OfficialPhoto { get; set; }

    public virtual DbSet<PersonalPhoto> PersonalPhoto { get; set; }

    public virtual DbSet<Registration> Registration { get; set; }

    public virtual DbSet<VoteRecord> VoteRecord { get; set; }

    public virtual DbSet<VoteTime> VoteTime { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Chat>(entity =>
        {
            entity.HasKey(e => e.ChatID).HasName("PK__Chat__A9FBE6269C664A27");

            entity.Property(e => e.ChatContent).IsRequired();
            entity.Property(e => e.ChatTime)
                .HasDefaultValueSql("(sysdatetime())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Activity).WithMany(p => p.Chat)
                .HasForeignKey(d => d.ActivityID)
                .HasConstraintName("FK__Chat__ActivityID__4D94879B");

            entity.HasOne(d => d.ToWhomNavigation).WithMany(p => p.InverseToWhomNavigation)
                .HasForeignKey(d => d.ToWhom)
                .HasConstraintName("FK__Chat__ToWhom__4F7CD00D");

            entity.HasOne(d => d.User).WithMany(p => p.Chat)
                .HasForeignKey(d => d.UserID)
                .HasConstraintName("FK__Chat__UserID__4E88ABD4");
        });

        modelBuilder.Entity<Contact>(entity =>
        {
            entity.HasKey(e => e.FormID).HasName("PK__Contact__FB05B7BD1F214900");

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EmailTitle)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.FormContent).IsRequired();
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.SendTime)
                .HasDefaultValueSql("(sysdatetime())")
                .HasColumnType("datetime");
            entity.Property(e => e.SenderName)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Group>(entity =>
        {
            entity.HasKey(e => e.GroupID).HasName("PK__Group__149AF30AC2CB9B09");

            entity.HasIndex(e => e.GroupName, "UQ__Group__6EFCD434D70ED376").IsUnique();

            entity.Property(e => e.EndDate).HasColumnType("date");
            entity.Property(e => e.GroupCategory).HasMaxLength(50);
            entity.Property(e => e.GroupName).HasMaxLength(255);
            entity.Property(e => e.StartDate).HasColumnType("date");

            entity.HasOne(d => d.OrganizerNavigation).WithMany(p => p.Group)
                .HasForeignKey(d => d.Organizer)
                .HasConstraintName("FK_Organizer");

            entity.HasOne(d => d.OriginalActivity).WithMany(p => p.Group)
                .HasForeignKey(d => d.OriginalActivityID)
                .HasConstraintName("FK_OriginalActivity");
        });

        modelBuilder.Entity<LikeRecord>(entity =>
        {
            entity.HasKey(e => e.LikeRecordID).HasName("PK__LikeReco__E89F8EF8E088DEC9");

            entity.HasIndex(e => new { e.UserID, e.ActivityID }, "UQ_UserActivityLike").IsUnique();

            entity.HasOne(d => d.Activity).WithMany(p => p.LikeRecord)
                .HasForeignKey(d => d.ActivityID)
                .HasConstraintName("FK_ActivityID");

            entity.HasOne(d => d.User).WithMany(p => p.LikeRecord)
                .HasForeignKey(d => d.UserID)
                .HasConstraintName("FK_UserID");
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__Member__1788CCACC8CBCC77");

            entity.HasIndex(e => e.Phone, "UQ__Member__5C7E359EE2ABF9A7").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Member__A9D1053410AD6939").IsUnique();

            entity.HasIndex(e => e.Account, "UQ__Member__B0C3AC46A1A40933").IsUnique();

            entity.HasIndex(e => e.Nickname, "UQ__Member__CC6CD17EA8E5D326").IsUnique();

            entity.Property(e => e.Account).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.Nickname).HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(255);
            entity.Property(e => e.Phone).HasMaxLength(20);
        });

        modelBuilder.Entity<MyActivity>(entity =>
        {
            entity.HasKey(e => e.ActivityID).HasName("PK__MyActivi__45F4A7F1F6203F73");

            entity.HasIndex(e => e.ActivityName, "UQ__MyActivi__1DB4FDB33AE863BA").IsUnique();

            entity.Property(e => e.ActivityName).HasMaxLength(255);
            entity.Property(e => e.Category).HasMaxLength(255);
            entity.Property(e => e.ExpectedDepartureMonth).HasColumnType("date");
            entity.Property(e => e.SuggestedAmount).HasColumnType("money");
            entity.Property(e => e.VoteDate).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.NotificationID).HasName("PK__Notifica__20CF2E3264F8C423");

            entity.Property(e => e.NotificationContent).IsRequired();
            entity.Property(e => e.NotificationDate)
                .HasDefaultValueSql("(sysdatetime())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.User).WithMany(p => p.Notification)
                .HasForeignKey(d => d.UserID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_User_Notification");
        });

        modelBuilder.Entity<OfficialPhoto>(entity =>
        {
            entity.HasKey(e => e.OfficialPhotoID).HasName("PK__Official__D35724640A11300C");

            entity.Property(e => e.PhotoPath).IsRequired();

            entity.HasOne(d => d.Activity).WithMany(p => p.OfficialPhoto)
                .HasForeignKey(d => d.ActivityID)
                .HasConstraintName("FK_Activity_Photo");
        });

        modelBuilder.Entity<PersonalPhoto>(entity =>
        {
            entity.HasKey(e => e.PersonalPhotoID).HasName("PK__Personal__2955081959C1C48B");

            entity.Property(e => e.PhotoData).IsRequired();

            entity.HasOne(d => d.Group).WithMany(p => p.PersonalPhoto)
                .HasForeignKey(d => d.GroupID)
                .HasConstraintName("FK_PersonalPhoto_Group");
        });

        modelBuilder.Entity<Registration>(entity =>
        {
            entity.HasKey(e => e.RegistrationID).HasName("PK__Registra__6EF58830C67E0CCB");

            entity.HasOne(d => d.Group).WithMany(p => p.Registration)
                .HasForeignKey(d => d.GroupID)
                .HasConstraintName("FK_Registration_Group");

            entity.HasOne(d => d.Participant).WithMany(p => p.Registration)
                .HasForeignKey(d => d.ParticipantID)
                .HasConstraintName("FK_Registration_User");
        });

        modelBuilder.Entity<VoteRecord>(entity =>
        {
            entity.HasKey(e => e.RecordID).HasName("PK__VoteReco__FBDF78C9A8192DF4");

            entity.Property(e => e.VoteResult).HasColumnType("date");

            entity.HasOne(d => d.Activity).WithMany(p => p.VoteRecord)
                .HasForeignKey(d => d.ActivityID)
                .HasConstraintName("FK_VoteRecord_ActivityID");

            entity.HasOne(d => d.User).WithMany(p => p.VoteRecord)
                .HasForeignKey(d => d.UserID)
                .HasConstraintName("FK_VoteRecord_UserID");
        });

        modelBuilder.Entity<VoteTime>(entity =>
        {
            entity.HasKey(e => e.VoteID).HasName("PK__VoteTime__52F015E2BF251FBF");

            entity.Property(e => e.StartDate).HasColumnType("date");

            entity.HasOne(d => d.Activity).WithMany(p => p.VoteTime)
                .HasForeignKey(d => d.ActivityID)
                .HasConstraintName("FK_VoteTime_Activity");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}